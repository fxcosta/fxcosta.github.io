webpackJsonp([26],{"./node_modules/json-loader/index.js!./.cache/json/blog-swig-for-designers.json":function(n,s){n.exports={data:{site:{siteMetadata:{title:"Felix Costa | Full-stack Developer",author:"Felix Costa"}},markdownRemark:{id:"/var/www/fxcosta-gatsby-v3/src/posts/swig-for-designers.md absPath of file >>> MarkdownRemark",html:'<h2>What’s Swig?</h2>\n<p><a href="http://paularmstrong.github.io/swig">Swig</a> is a node.js templating engine that includes things like layouts, partials, logic tags and filters out of the box. Simple ingredients to make designing for the web a pleasant experience.</p>\n<h4>Why use Swig over something like handlebars?</h4>\n<p>Well, when I was rebuilding my site in <a href="http://www.metalsmith.io/">metalsmith</a> with <a href="https://github.com/segmentio/metalsmith-templates">metalsmith-templates</a>, I needed some logic to live in my templates and proper layout support. With <a href="http://handlebarsjs.com/">handlebars</a> I ended up writing and registering way too many custom helpers in handlebars to accomplish a fraction of the features that come standard in Swig. Lastly, it’s nice to focus on creating content and not writing a templating engine from scratch.</p>\n<h4>Before we get started</h4>\n<p>This post assumes you already have a project that has Swig integrated or you’re working with a project that use <a href="https://github.com/tj/consolidate.js">consolidate.js</a> to offer plug and play options for <a href="https://github.com/tj/consolidate.js#supported-template-engines">supported templating engines</a> like Swig. Some examples include <a href="http://learnwebtutorials.com/using-swig-templates-with-expressjs">express</a>, <a href="https://github.com/segmentio/metalsmith-templates#javascript-usage">metalsmith</a>, or <a href="https://github.com/niftylettuce/node-email-templates#supported-template-engines">Node Email Templates</a>. If you don’t already have a project, consider going through the <a href="http://paularmstrong.github.io/swig/docs#install">Getting Started</a> from docs page.</p>\n<h2>Getting to know Swig</h2>\n<p>In order to better understand Swig, I’ll break things out the way Shopify documentation did for liquid templating with <a href="https://github.com/Shopify/liquid/wiki/Liquid-for-Designers">Liquid for Designers</a> and sprinkle in the best parts of the Swig docs.</p>\n<p>First off, there are two main types of markup in Swig</p>\n<ul>\n<li>Output Tags</li>\n<li>Logic Tags</li>\n</ul>\n<p><strong>Output tags</strong> are surrounded by double curly brackets and are expected to render content if the data exists.</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><strong>Logic tags</strong> begin with a curly bracket and then percent sign. These tags control output through common logic operators and helpers.</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> foo <span class="token operator">%</span><span class="token punctuation">}</span> this <span class="token keyword">is</span> rendered <span class="token keyword">if</span> foo <span class="token operator">==</span> true <span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2>Output Tags</h2>\n<p>Here’s a simple example of Output:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token comment" spellcheck="true"># context = {name: \'world\', user: {greeting: \'hello\'}};</span>\n\nHello <span class="token punctuation">{</span><span class="token punctuation">{</span> name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token comment" spellcheck="true"># Hello world</span>\n\nHello <span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>greeting <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token comment" spellcheck="true"># Hello hello</span>\n\nHello <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token string">\'bob\'</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token comment" spellcheck="true"># Hello bob</span>\n</code></pre>\n      </div>\n<h3>Filters</h3>\n<p>Output tags can process content through filters.  Filters are simple methods.  The first parameter is always the output of the left side of the filter.  The return value of the filter will be the new left value when the next filter is run.  When there are no more filters, the template will receive the resulting string.</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code>context <span class="token operator">=</span> <span class="token punctuation">{</span>name<span class="token punctuation">:</span> <span class="token string">\'world\'</span><span class="token punctuation">}</span><span class="token punctuation">;</span>\n\nHello <span class="token punctuation">{</span><span class="token punctuation">{</span> <span class="token string">\'world\'</span> <span class="token operator">|</span> upper <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token comment" spellcheck="true"># Hello WORLD</span>\n\nHello world has <span class="token punctuation">{</span><span class="token punctuation">{</span> name<span class="token punctuation">.</span>length <span class="token punctuation">}</span><span class="token punctuation">}</span> letters!\n<span class="token comment" spellcheck="true"># Hello world has 5 letters!</span>\n\nHello <span class="token punctuation">{</span><span class="token punctuation">{</span> Date<span class="token punctuation">.</span>now<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">|</span> date<span class="token punctuation">(</span><span class="token string">\'Y-m-d\'</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token comment" spellcheck="true"># Hello 2015-06-20</span>\n</code></pre>\n      </div>\n<p>Here’s a list of the available filters in Swig:</p>\n<ul>\n<li><code>capitalize</code> capitalize words in the input sentence - <a href="http://paularmstrong.github.io/swig/docs/filters/#capitalize">docs</a></li>\n<li><code>lower</code> convert an input string to lowercase - <a href="http://paularmstrong.github.io/swig/docs/filters/#lower">docs</a></li>\n<li><code>upper</code> convert an input string to uppercase - <a href="http://paularmstrong.github.io/swig/docs/filters/#upper">docs</a></li>\n<li><code>title</code> capitalizes every word given and lower-cases all other letters <a href="http://paularmstrong.github.io/swig/docs/filters/#title">docs</a></li>\n<li><code>date</code> reformat a date - <a href="http://paularmstrong.github.io/swig/docs/filters/#date">docs</a></li>\n<li><code>default</code> If the input is <code>undefined</code>, <code>null</code>, or <code>false</code>, a default return value can be specified - <a href="http://paularmstrong.github.io/swig/docs/filters/#default">docs</a></li>\n<li><code>json</code> - render a string representation of an JavaScript object - <a href="http://paularmstrong.github.io/swig/docs/filters/#json">docs</a></li>\n<li><code>striptags</code> strip html from string - <a href="http://paularmstrong.github.io/swig/docs/filters/#striptags">docs</a></li>\n<li><code>safe</code> - forces the input to not be auto-escaped. Use this only on content that you know is safe to be rendered on your page - <a href="http://paularmstrong.github.io/swig/docs/filters/#safe">docs</a></li>\n<li><code>raw</code> - ^ see safe <a href="http://paularmstrong.github.io/swig/docs/filters/#safe">docs</a></li>\n<li><code>replace</code> replace each occurrence of a string - <a href="http://paularmstrong.github.io/swig/docs/filters/#replace">docs</a></li>\n<li><code>escape</code> escape a string - <a href="http://paularmstrong.github.io/swig/docs/filters/#escape">docs</a></li>\n<li><code>addslashes</code> - add backslashes to characters that need to be escaped - <a href="http://paularmstrong.github.io/swig/docs/filters/#default">docs</a></li>\n<li><code>url_encode</code> - URL-encode a string - <a href="http://paularmstrong.github.io/swig/docs/filters/#url_encode">docs</a></li>\n<li><code>url_decode</code> - URL-decode a string - <a href="http://paularmstrong.github.io/swig/docs/filters/#url_decode">docs</a></li>\n<li><code>first</code> - get the first element of the passed in array, object or string - <a href="http://paularmstrong.github.io/swig/docs/filters/#first">docs</a></li>\n<li><code>last</code> - get the last element of the passed in array, object or string <a href="http://paularmstrong.github.io/swig/docs/filters/#last">docs</a></li>\n<li><code>reverse</code> - reverse sort the values passed in - <a href="http://paularmstrong.github.io/swig/docs/filters/#reverse">docs</a></li>\n<li><code>sort</code> sort the input in an ascending direction - <a href="http://paularmstrong.github.io/swig/docs/filters/#sort">docs</a></li>\n<li><code>join</code> join elements of the array with certain character between them - <a href="http://paularmstrong.github.io/swig/docs/filters/#join">docs</a></li>\n<li><code>groupBy</code> group an array of objects by a common key - <a href="http://paularmstrong.github.io/swig/docs/filters/#groupBy">docs</a></li>\n<li><code>uniq</code> remove all duplicate items from an array - <a href="http://paularmstrong.github.io/swig/docs/filters/#uniq">docs</a></li>\n</ul>\n<h2>Logic Tags</h2>\n<p>These tags include common helpers for dealing with logic in your template. They can also be used to include partials and reference layouts that the current view should be rendered in.</p>\n<p>Here’s a list of currently supported <a href="http://paularmstrong.github.io/swig/docs/tags/">tags</a>: <code>autoescape</code>, <code>block</code>, <code>else</code>, <code>elif</code>, <code>extends</code>, <code>filter</code>, <code>for</code>, <code>if</code>, <code>import</code>, <code>include</code>, <code>macro</code>, <code>parent</code>, <code>raw</code>, <code>set</code>, <code>spaceless</code>.</p>\n<h3>Extends &#x26; Blocks (Layouts)</h3>\n<p>Layouts can define <code>blocks</code> of content areas that are placeholders for content from pages. Each page can reference a layout by using the <code>extends</code> tag.</p>\n<p><strong>layout.html</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token operator">&lt;</span>!doctype html<span class="token operator">></span>\n<span class="token operator">&lt;</span>html<span class="token operator">></span>\n<span class="token operator">&lt;</span>head<span class="token operator">></span>\n  <span class="token operator">&lt;</span>meta charset<span class="token operator">=</span><span class="token string">"utf-8"</span><span class="token operator">></span>\n  <span class="token operator">&lt;</span>title<span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">%</span> block title <span class="token operator">%</span><span class="token punctuation">}</span>My Site<span class="token punctuation">{</span><span class="token operator">%</span> endblock <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>title<span class="token operator">></span>\n\n  <span class="token punctuation">{</span><span class="token operator">%</span> block head <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"main.css"</span><span class="token operator">></span>\n  <span class="token punctuation">{</span><span class="token operator">%</span> endblock <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>head<span class="token operator">></span>\n<span class="token operator">&lt;</span>body<span class="token operator">></span>\n  <span class="token punctuation">{</span><span class="token operator">%</span> block content <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> endblock <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>body<span class="token operator">></span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>html<span class="token operator">></span>\n</code></pre>\n      </div>\n<p><strong>page.html</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> extends <span class="token string">\'layout.html\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> block title <span class="token operator">%</span><span class="token punctuation">}</span>My Page<span class="token punctuation">{</span><span class="token operator">%</span> endblock <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> block head <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token punctuation">{</span><span class="token operator">%</span> parent <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span>link rel<span class="token operator">=</span><span class="token string">"stylesheet"</span> href<span class="token operator">=</span><span class="token string">"custom.css"</span><span class="token operator">></span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endblock <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> block content <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token operator">&lt;</span>p<span class="token operator">></span>This <span class="token keyword">is</span> just an awesome page<span class="token punctuation">.</span><span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endblock <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><strong>Output</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token doctype">&lt;!doctype html></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>html</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>head</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>meta</span> <span class="token attr-name">charset</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>utf-8<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>title</span><span class="token punctuation">></span></span>My Page<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>title</span><span class="token punctuation">></span></span>\n\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>main.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>link</span> <span class="token attr-name">rel</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>stylesheet<span class="token punctuation">"</span></span> <span class="token attr-name">href</span><span class="token attr-value"><span class="token punctuation">=</span><span class="token punctuation">"</span>custom.css<span class="token punctuation">"</span></span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>head</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>body</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>p</span><span class="token punctuation">></span></span>This is just an awesome page.<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>p</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>body</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>html</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<h3>Includes (Partials)</h3>\n<p>You can include a template partial with the current local data available to it or by specifying a specific context.</p>\n<p><strong>partial.html</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token operator">&lt;</span>ul<span class="token operator">></span>\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> tag <span class="token keyword">in</span> tags <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> tag <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span>\n</code></pre>\n      </div>\n<p><strong>page.html</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token operator">//</span> var tags <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">\'node\'</span><span class="token punctuation">,</span> <span class="token string">\'swig\'</span><span class="token punctuation">,</span> <span class="token string">\'templating\'</span><span class="token punctuation">]</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> include <span class="token string">"./partial.html"</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p><strong>Output</strong></p>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token doctype">&lt;!doctype html></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>node<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>swig<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>templating<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<h3>Raw</h3>\n<p>Raw temporarily disables tag processing. This is useful for generating content (eg, Angular, Mustache, Handlebars) which uses conflicting syntax.</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code>In Angular<span class="token punctuation">.</span>js<span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token operator">%</span> raw <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token punctuation">{</span> data <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> endraw <span class="token operator">%</span><span class="token punctuation">}</span> will be HTML<span class="token operator">-</span>escaped<span class="token punctuation">.</span>\n</code></pre>\n      </div>\n<h3>If / Else</h3>\n<p><code>if / else</code> should be well-known from any other programming language.\nSwig allows you to write simple expressions in the <code>if</code> (and\noptionally, <code>elseif</code>) clause:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello <span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token comment" spellcheck="true"># Same as above</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user <span class="token operator">!=</span> null <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello <span class="token punctuation">{</span><span class="token punctuation">{</span> user<span class="token punctuation">.</span>name <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'tobi\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello tobi\n<span class="token punctuation">{</span><span class="token operator">%</span> elseif user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'bob\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello bob\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'tobi\'</span> <span class="token operator">or</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'bob\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello tobi <span class="token operator">or</span> bob\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true"># or</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'tobi\'</span> <span class="token operator">|</span><span class="token operator">|</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'bob\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello tobi <span class="token operator">or</span> bob\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'bob\'</span> <span class="token operator">and</span> user<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">45</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello old bob\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token comment" spellcheck="true"># or</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>name <span class="token operator">==</span> <span class="token string">\'bob\'</span> <span class="token operator">&amp;</span><span class="token operator">&amp;</span> user<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">45</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello old bob\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>name <span class="token operator">!=</span> <span class="token string">\'tobi\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  Hello non<span class="token operator">-</span>tobi\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token comment" spellcheck="true"># Check for the size of an array</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>payments<span class="token punctuation">.</span>length <span class="token operator">%</span><span class="token punctuation">}</span>\n   you never paid !\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>payments<span class="token punctuation">.</span>length <span class="token operator">></span> <span class="token number">0</span>  <span class="token operator">%</span><span class="token punctuation">}</span>\n   you paid !\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> user<span class="token punctuation">.</span>age <span class="token operator">></span> <span class="token number">18</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n   Login here\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">else</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n   Sorry<span class="token punctuation">,</span> you are too young\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token comment" spellcheck="true"># array = 1,2,3</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> array<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n   array includes <span class="token number">2</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token comment" spellcheck="true"># string = \'hello world\'</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> string<span class="token punctuation">.</span>indexOf<span class="token punctuation">(</span><span class="token string">\'hello world\'</span><span class="token punctuation">)</span> <span class="token operator">></span> <span class="token operator">-</span><span class="token number">1</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n   string includes <span class="token string">\'hello\'</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3>For loops</h3>\n<p>Swig allows <code>for</code> loops over arrays and objects:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">\'one\'</span><span class="token punctuation">,</span> <span class="token string">\'two\'</span><span class="token punctuation">,</span> <span class="token string">\'three\'</span><span class="token punctuation">]</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token punctuation">{</span><span class="token punctuation">{</span> item <span class="token punctuation">}</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code>one\ntwo\nthree\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> set obj <span class="token operator">=</span> <span class="token punctuation">{</span><span class="token string">\'one\'</span><span class="token punctuation">:</span> <span class="token string">\'value\'</span><span class="token punctuation">,</span> <span class="token string">\'two\'</span><span class="token punctuation">:</span> <span class="token string">\'other value\'</span><span class="token punctuation">}</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> x <span class="token keyword">in</span> obj <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> loop<span class="token punctuation">.</span>first <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span>ul<span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span>li<span class="token operator">></span><span class="token punctuation">{</span><span class="token punctuation">{</span> loop<span class="token punctuation">.</span>index <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token operator">-</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> loop<span class="token punctuation">.</span>key <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">:</span> <span class="token punctuation">{</span><span class="token punctuation">{</span> x <span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>li<span class="token operator">></span>\n  <span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> loop<span class="token punctuation">.</span>last <span class="token operator">%</span><span class="token punctuation">}</span><span class="token operator">&lt;</span><span class="token operator">/</span>ul<span class="token operator">></span><span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<div class="gatsby-highlight">\n      <pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>ul</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>1 - one: value<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n  <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>li</span><span class="token punctuation">></span></span>2 - two: other value<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>li</span><span class="token punctuation">></span></span>\n<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>ul</span><span class="token punctuation">></span></span>\n</code></pre>\n      </div>\n<p>During every <code>for</code> loop, the following helper variables are available for extra\nstyling needs:</p>\n<ul>\n<li><code>loop.index</code> the current iteration of the loop (1-indexed)</li>\n<li><code>loop.index0</code> the current iteration of the loop (0-indexed)</li>\n<li><code>loop.revindex</code> the number of iterations from the end of the loop (1-indexed)</li>\n<li><code>loop.revindex0</code> the number of iterations from the end of the loop (0-indexed)</li>\n<li><code>loop.key</code> if the iterator is an object, this will be the key of the current item, otherwise it will be the same as the loop.index.</li>\n<li><code>loop.first</code> true if the current object is the first in the object or array.</li>\n<li><code>loop.last</code> true if the current object is the last in the object or array.</li>\n</ul>\n<p>Reversing the loop</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> item <span class="token keyword">in</span> collection <span class="token operator">|</span> reverse <span class="token operator">%</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token punctuation">{</span>item<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h3>Variable Assignment</h3>\n<p>You can store data in your own variables, to be used in output or other tags as\ndesired.  The simplest way to create a variable is with the <code>set</code> tag, which\nhas a pretty straightforward syntax:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> set name <span class="token operator">=</span> <span class="token string">\'freestyle\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> t <span class="token keyword">in</span> collections<span class="token punctuation">.</span>tags <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> t <span class="token operator">==</span> name <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span>Freestyle!<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<p>Another way of doing this would be to assign <code>true / false</code> values to the\nvariable:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token operator">%</span> set freestyle <span class="token operator">=</span> false <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">for</span> t <span class="token keyword">in</span> collections<span class="token punctuation">.</span>tags <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> t <span class="token operator">==</span> <span class="token string">\'freestyle\'</span> <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token punctuation">{</span><span class="token operator">%</span> assign freestyle <span class="token operator">=</span> true <span class="token operator">%</span><span class="token punctuation">}</span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span><span class="token punctuation">{</span><span class="token operator">%</span> endfor <span class="token operator">%</span><span class="token punctuation">}</span>\n\n<span class="token punctuation">{</span><span class="token operator">%</span> <span class="token keyword">if</span> freestyle <span class="token operator">%</span><span class="token punctuation">}</span>\n  <span class="token operator">&lt;</span>p<span class="token operator">></span>Freestyle!<span class="token operator">&lt;</span><span class="token operator">/</span>p<span class="token operator">></span>\n<span class="token punctuation">{</span><span class="token operator">%</span> endif <span class="token operator">%</span><span class="token punctuation">}</span>\n</code></pre>\n      </div>\n<h2>Comments</h2>\n<p>Comments do not adhere to the curly bracket plus percent sign tag or the double curly brackets tag. Comments are possible through the following tag format <code>{# comment #}</code>.</p>\n<p>Check out the following examples:</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code>We made <span class="token number">1</span> million dollars <span class="token punctuation">{</span><span class="token comment" spellcheck="true"># in losses #} this year</span>\n</code></pre>\n      </div>\n<p>Which outputs to</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code>We made <span class="token number">1</span> million dollars this year\n</code></pre>\n      </div>\n<p>Multiline Comments</p>\n<div class="gatsby-highlight">\n      <pre class="language-python"><code><span class="token punctuation">{</span><span class="token comment" spellcheck="true">#</span>\nThis <span class="token keyword">is</span> a comment<span class="token punctuation">.</span>\nIt will be fully stripped <span class="token operator">and</span> ignored during parsing<span class="token punctuation">.</span>\n<span class="token comment" spellcheck="true">#}</span>\n</code></pre>\n      </div>\n<h2>Wrapping things up</h2>\n<p>Swig is a powerful and flexible templating option for node.js. Consider using it the next time you need to support layouts, partials, filters and logic in your node projects. To learn more about swig, give a thorough look through <a href="http://paularmstrong.github.io/swig">Swig Docs</a>.</p>\n<p>Have an example of how you use Swig? Share a link in the comment section below :]</p>',
frontmatter:{date:"2015-06-20",title:"Swig For Designers",tags:["swig","node","templating"]}}},pathContext:{slug:"/blog/swig-for-designers/",collection:"posts"}}}});
//# sourceMappingURL=path---blog-swig-for-designers-e7eff54b625d9e3b9859.js.map